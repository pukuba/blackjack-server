type User{
    code: Int!
    id: String
    gold: Int
    token: String
    status: String
    host: Int
}

type OneTimeResult{
    id: String
    code: Int!
    amount: Int
    gold: Int
    date: String
}

type Chat{
    id: String
    content: String
    code: Int
    token: String
}

type OrderResult{
    code: Int!
    data: [OneTimeResult]
    token: String
}

type RoomStatus{
    code: Int!
    host: String!
    player: Int
    roomId: Int 
    token: String
}

input OneTime{
    amount: Int!
    card_number: String!
    expiry: String!
    birth: String!
    pwd_2digit: String!
    buyer_tel: String!
    buyer_email: String!
}

type Query{
    login(id:String!, pw:String!): User
    order: OrderResult
    online: User
    refresh: [RoomStatus]
}

type Mutation{
    register(id:String!, pw:String!): User
    logout: User
    onetime(input: OneTime!): OneTimeResult
    chat(content: String!, room:Int!): Chat
    create: RoomStatus
}


type Subscription{
    newChat(room:Int!): Chat
    newRoom: RoomStatus
}